


ARM Macro Assembler    Page 1 


    1 00000000         ;check whether the given 32-bit number stored in memory 
                       4000 0000h is palindrome or not
    2 00000000                 AREA             PALINDROME, CODE, READONLY
    3 00000000                 ENTRY
    4 00000000         MAIN
    5 00000000 E3A00101        LDR              R0,=0X40000000 ; LOAD THE ADDRE
                                                            SS FOR 32-BIT NUMBE
                                                            R
    6 00000004 E5901000        LDR              R1,[R0]     ;LOAD THE VALUE INT
                                                            O REGISTER R1
    7 00000008 E3A09004        LDR              R9,=4       ;COUNTER VARIABLE
    8 0000000C E59F2054        LDR              R2,=0X0000FFFF ;LOAD THE VALUE 
                                                            TO REGISTER R2
    9 00000010 E59F3054        LDR              R3,=0XFFFF0000 ;LOAD THE VALUE 
                                                            TO REGISTER R3
   10 00000014 E0014002        AND              R4,R1,R2    ;AND OPERATION TO G
                                                            ET THE LOWER HALF-W
                                                            ORD 
   11 00000018 E0015003        AND              R5,R1,R3    ;;AND OPERATION TO 
                                                            GET THE UPPER HALF-
                                                            WORD 
   12 0000001C E1A05825        MOV              R5,R5,LSR #16 ;LOGICAL SHIFT-RI
                                                            GHT AND STORE IN R5
                                                            
   13 00000020 E3A0200F        LDR              R2,=0X0000000F ;GET THE FIRST V
                                                            ALUE
   14 00000024 E3A03A0F        LDR              R3,=0X0000F000 
                                                            ;GET THE LAST VALUE
                                                            
   15 00000028         LOOP
   16 00000028 E3590000        CMP              R9,#0       ;CHECK IF THE COUNT
                                                             IS ZERO
   17 0000002C 0A000008        BEQ              EXIT        ;IF YES BRANCH TO E
                                                            XIT
   18 00000030 E0046002        AND              R6,R4,R2    ;AND THE CONTENTS A
                                                            ND STORE FIRST VALU
                                                            E IN R6
   19 00000034 E0057003        AND              R7,R5,R3    ;AND THE CONTENTS A
                                                            ND STORE THE LAST V
                                                            ALUE IN R7
   20 00000038 E1A07627        MOV              R7,R7,LSR #12 ;LOGICAL SHIFT-RI
                                                            GHT THE LAST VALUE 
                                                            AND RETAIN IT IN R7
                                                            
   21 0000003C E1570006        CMP              R7,R6       ;COMPARE R7 AND R6
   22 00000040 1A000005        BNE              NOT_PAL     ;BRANCH TO NOT_PAL 
                                                            IF NOT EQUAL
   23 00000044 E1A04224        MOV              R4,R4,LSR #4 ;LOGICAL SHIFT-RIG
                                                            HT R4 TO GET THE NE
                                                            XT VALUE
   24 00000048 E1A05205        MOV              R5,R5,LSL #4 ;LOGICAL SHIFT-LEF
                                                            T R5 TO GET THE NEX
                                                            T VALUE
   25 0000004C E2499001        SUB              R9,R9,#1    ;DECREMENT THE COUN
                                                            T
   26 00000050 EAFFFFF4        B                LOOP        ;ITERATE THE LOOP T
                                                            ILL COUNT EQUALS ZE
                                                            RO
   27 00000054         EXIT



ARM Macro Assembler    Page 2 


   28 00000054 E3A0A000        LDR              R10,=0      ;SET R10(FLAG) TO Z
                                                            ERO IF ITS A PALIND
                                                            ROME
   29 00000058 EA000001        B                STOP        ;STOP THE EXECUTION
                                                            
   30 0000005C         NOT_PAL
   31 0000005C E3A0A0FF        LDR              R10,=0xFF   ;SET THE R10 TO 1 I
                                                            F ITS NOT A PALINDR
                                                            OME
   32 00000060 EAFFFFFF        B                STOP
   33 00000064 EAFFFFFE 
                       STOP    B                STOP        ;INFINITE LOOPING
   34 00000068                 END                          ;END OF EXECUTION
              0000FFFF 
              FFFF0000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\palindrome.d -o.\objects\palindrome.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Kei
l_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 529" --list=.\listings\palindrome.lst pali
ndrome.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

EXIT 00000054

Symbol: EXIT
   Definitions
      At line 27 in file palindrome.asm
   Uses
      At line 17 in file palindrome.asm
Comment: EXIT used once
LOOP 00000028

Symbol: LOOP
   Definitions
      At line 15 in file palindrome.asm
   Uses
      At line 26 in file palindrome.asm
Comment: LOOP used once
MAIN 00000000

Symbol: MAIN
   Definitions
      At line 4 in file palindrome.asm
   Uses
      None
Comment: MAIN unused
NOT_PAL 0000005C

Symbol: NOT_PAL
   Definitions
      At line 30 in file palindrome.asm
   Uses
      At line 22 in file palindrome.asm
Comment: NOT_PAL used once
PALINDROME 00000000

Symbol: PALINDROME
   Definitions
      At line 2 in file palindrome.asm
   Uses
      None
Comment: PALINDROME unused
STOP 00000064

Symbol: STOP
   Definitions
      At line 33 in file palindrome.asm
   Uses
      At line 29 in file palindrome.asm
      At line 32 in file palindrome.asm
      At line 33 in file palindrome.asm

6 symbols
340 symbols in table
